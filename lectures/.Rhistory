getwd()
surveys <- read.csv("lectures/data/portal.csv")
surveys <- read.csv("data/portal.csv")
read.csv("data/portal.csv")
surveys <- read.csv("data/portal_data.csv")
library(tidyverse)
library(here)
# read file into R
portal_data <- read_csv(here("lectures/data/portal_data.csv"))
# subset every 8th row
surveys_subset <- portal_data[seq(1, 34786, 8), ]
# save subsetted dataframe into a new .csv in your file folder
write.csv(surveys_subset,
file = "~/lectures/data/survey_subset.csv")
surveys_subset
# save subsetted dataframe into a new .csv in your file folder
write.csv(surveys_subset,
file = "~/lectures/data/survey_subset.csv")
# save subsetted dataframe into a new .csv in your file folder
write_csv(surveys_subset,
file = "~/lectures/data/survey_subset.csv")
getwd()
library(tidyverse)
library(here)
# read file into R
portal_data <- read_csv("/data/portal_data.csv")
# read file into R
portal_data <- read_csv("data/portal_data.csv")
library(tidyverse)
library(here)
# read file into R
portal_data <- read_csv("data/portal_data.csv")
# subset every 8th row
surveys_subset <- portal_data[seq(1, 34786, 8), ]
# save subsetted dataframe into a new .csv in your file folder
write.csv(surveys_subset,
file = "data/survey_subset.csv")
# if you already have surveys_subset.csv in your file folder, you only have to run this
surveys_subset <- read_csv('data/survey_subset.csv')
# always good to inspect your data frame to make sure there are no errors
head(surveys_subset)
str(surveys_subset)
ggplot(data = surveys_subset)
ggplot(surveys_subset)
ggplot(surveys_subset, aes(x = weight, y = hindfoot_length))
ggplot(surveys_subset, aes(x = weight, y = hindfoot_length)) +
geom_point()
# Assign plot to a variable
surveys_plot <- ggplot(surveys_subset, aes(x = weight, y = hindfoot_length))
# Draw the plot
surveys_plot + geom_point()
ggplot(surveys_subset, aes(x = weight, y = hindfoot_length)) +
geom_point()
ggplot(data = surveys_subset, aes(x = weight, y = hindfoot_length)) +
geom_point(alpha = 0.2)
ggplot(surveys_subset, aes(x = weight, y = hindfoot_length, colour = plot_type)) +
geom_point(alpha = 0.2)
surveys_subset %>%
summarize_all(n_distinct)
# `n_distinct` is a function that counts unique values in a set of vectors
surveys_subset %>%
distinct(taxa)
ggplot(surveys_subset, aes(x = weight, y = hindfoot_length, colour = taxa)) +
geom_point(alpha = 0.2)
surveys_subset %>%
group_by(taxa) %>%
tally()
surveys_subset %>%
filter(!is.na(hindfoot_length)) %>% # control by removing `!`
group_by(taxa) %>%
tally()
surveys_hf_wt <- surveys_subset %>%
filter(!is.na(hindfoot_length) & !is.na(weight))
surveys_hf_wt %>%
summarize_all(n_distinct)
ggplot(surveys_hf_wt, aes(x = weight, y = hindfoot_length, colour = genus)) +
geom_point(alpha = 0.2)
ggplot(surveys_hf_wt, aes(x = weight, y = hindfoot_length, colour = species)) +
geom_point(alpha = 0.2)
surveys_subset %>%
filter(!is.na(hindfoot_length) & !is.na(weight)) %>%
group_by(species) %>%
tally() %>%
arrange(desc(n))
surveys_abun_species <- surveys_subset %>%
filter(!is.na(hindfoot_length) & !is.na(weight)) %>%
group_by(species) %>%
mutate(n = n()) %>% # add count value to each row
filter(n > 100) %>%
select(-n)
surveys_abun_species
ggplot(surveys_abun_species, aes(x = weight, y = hindfoot_length, colour = species)) +
geom_point(alpha = 0.2)
library(tidyverse)
download.file("https://uoftcoders.github.io/rcourse/data/pseudo.ara.busco",
"lectures/data/pseudo.ara.busco")
download.file("https://uoftcoders.github.io/rcourse/data/pseudo.LTRs",
"lectures/data/pseudo.LTRs")
download.file("https://uoftcoders.github.io/rcourse/data/pseudoMol_Kdist.txt",
"lectures/data/pseudoMol_Kdist.txt")
geneDensity <- read_tsv("data/pseudo.ara.busco",
col_names = c("chromosome", "start", "end", "winNum",
"numElements", "numBases", "winSize",
"density"))
ltrDensity <- read_tsv("data/pseudo.LTRs",
col_names = c("chromosome", "start", "end", "winNum",
"numElements", "numBases", "winSize",
"density"))
getwd()
download.file("https://uoftcoders.github.io/rcourse/data/pseudo.ara.busco",
"data/pseudo.ara.busco")
download.file("https://uoftcoders.github.io/rcourse/data/pseudo.LTRs",
"data/pseudo.LTRs")
download.file("https://uoftcoders.github.io/rcourse/data/pseudoMol_Kdist.txt",
"data/pseudoMol_Kdist.txt")
geneDensity <- read_tsv("data/pseudo.ara.busco",
col_names = c("chromosome", "start", "end", "winNum",
"numElements", "numBases", "winSize",
"density"))
ltrDensity <- read_tsv("data/pseudo.LTRs",
col_names = c("chromosome", "start", "end", "winNum",
"numElements", "numBases", "winSize",
"density"))
ltrAge <- read_tsv("data/pseudoMol_Kdist.txt", col_names = TRUE)
