[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "EEB313: Quantitative Methods in R for Biology",
    "section": "",
    "text": "Syllabus"
  },
  {
    "objectID": "index.html#land-acknowledgement",
    "href": "index.html#land-acknowledgement",
    "title": "EEB313: Quantitative Methods in R for Biology",
    "section": "Land Acknowledgement",
    "text": "Land Acknowledgement\nAlthough our students come from many locations around the world, we wish to recognize the land on which the University of Toronto was built. This land has historically been and still is the the home of the Huron-Wendat, the Seneca, and the Mississaugas of the Credit River.\nThere is a First Nations House for Indigenous Student Services on campus. Please refer to their web page for more resources and information about honouring our land and their services for students."
  },
  {
    "objectID": "index.html#course-overview",
    "href": "index.html#course-overview",
    "title": "EEB313: Quantitative Methods in R for Biology",
    "section": "Course Overview",
    "text": "Course Overview\nThis course covers statistical and data analysis, reproducible quantitative methods, and scientific computing in R to answer questions in ecology and evolutionary biology. Statistical and data analysis, modeling, and computing are essential skills for all biologists. This course is designed to meet a growing demand for reproducible, openly accessible, analytically thorough, and well-documented science. Students will learn to analyze and visualize data, develop mathematical models, and document their research using the R programming language. No prerequisite programming experience is required.\nPrerequisites: BIO220H1 and one of EEB225H1, STA288H1, or STA220H1\n\nTime\nTue and Thu 2:10 - 4:00 PM EST.\n\n\nClass Locations\nRW109 (Ramsay Wright first floor computer lab), St. George Campus.\n\n\n\nOffice hours (in EST)\n\n\n\n\n\n\nMete\nWeds 11-12pm\nESC3044\n\n\nVicki\nMon 11-12pm\nESC3044\n\n\nZoe\nThurs 4-5pm\nRW109\n\n\nJessie\nTues 4-5pm\nRW109\n\n\n\n\n\nContact protocol\nPlease address all course-related and project issues to both Vicki and Mete, with the exception that questions regarding assignments should be addressed to Zoe and Jessie. Prefix the subject matter with “EEB313”. If you do not receive a reply within 48 hours (excluding weekends), please send us a reminder."
  },
  {
    "objectID": "index.html#diversity-and-inclusion-statement",
    "href": "index.html#diversity-and-inclusion-statement",
    "title": "EEB313: Quantitative Methods in R for Biology",
    "section": "Diversity and inclusion statement",
    "text": "Diversity and inclusion statement\nAs students, you all have something unique and special to offer to science. It is our intent that students from all backgrounds and perspectives be well served by this course, that students’ learning needs be addressed both in and out of class, and that the diversity that students bring to this class be recognized as a resource, strength, and benefit.\nDiversity can refer to multiple ways that we identify ourselves, including but not limited to race, national origin, language, cultural heritage, physical ability, neurodiversity, age, sexual orientation, gender identity, religion, and socio-economic class. Each of these varied, and often intersecting, identities, along with many others not mentioned here, shape the perspectives we bring to this class, to this department, and to the greater EEB community. We will work to promote diversity, equity, and inclusion not only because diversity fuels excellence and innovation, but because we want to pursue justice.\nWe expect that everybody in this class will respect each other, and demonstrate diligence in understanding how other people’s perspectives, behaviors, and worldviews may be different from their own. Racist, sexist, colonialist, homophobic, transphobic, and other abusive and discriminatory behavior and language will not be tolerated in this class and will result in disciplinary action, such as removal from class session or revocation of group working privileges. Please consult the University of Toronto Code of Student Conduct for details on unacceptable conduct and possible sanctions.\nPlease let us know if something said or done in this class, by either a member of the teaching team or other students, is particularly troubling or causes discomfort or offense. While our intention may not be to cause discomfort or offense, the impact of what happens throughout the course is not to be ignored and is something that we consider to be very important and deserving of attention. If and when this occurs, there are several ways to alleviate some of the discomfort or hurt you may experience:\n\nDiscuss the situation privately with a member of the teaching team. We are always open to listening to students’ experiences, and want to work with students to find acceptable ways to process and address the issue.\nNotify us of the issue through another source such as a trusted faculty member or a peer. If for any reason you do not feel comfortable discussing the issue directly with us, we encourage you to seek out another, more comfortable avenue to address the issue.\nContact the Anti-Racism and Cultural Diversity Office to report an incident and receive complaint resolution support, which may include consultations and referrals.\n\nWe acknowledge our imperfections while we also fully commit to the work, inside and outside of our classrooms, of building and sustaining a community that increasingly embraces these core values. Your suggestions and feedback are encouraged and appreciated. Please let us know ways to improve the effectiveness of the course for you personally or for other students or student groups."
  },
  {
    "objectID": "index.html#wellness-statement",
    "href": "index.html#wellness-statement",
    "title": "EEB313: Quantitative Methods in R for Biology",
    "section": "Wellness statement",
    "text": "Wellness statement\nWe on the teaching team value your health and wellness. In order to succeed in this class, in university, and beyond, you must balance your work with rest, exercise, and attention to your mental and physical health. Working until exhaustion is NOT a badge of honor. If you are finding it difficult to balance your health and well-being with your work in this class, please do not hesitate to let us know. We are happy to help connect you with resources and services on campus and also to make accommodations to our course plan as needed. Our inboxes are always open, and we are also available for virtual chats by appointment. You have our support, and we believe in you."
  },
  {
    "objectID": "index.html#absence-policy",
    "href": "index.html#absence-policy",
    "title": "EEB313: Quantitative Methods in R for Biology",
    "section": "Absence policy",
    "text": "Absence policy\nIf you are feeling unwell, please do not come to class. Instead, take the time to recover fully. Please let us know if you are feeling sick - you will not be penalized for missing a lecture, and we will do our best to ensure that you are up-to-date with class materials when you return."
  },
  {
    "objectID": "index.html#accessibility-needs",
    "href": "index.html#accessibility-needs",
    "title": "EEB313: Quantitative Methods in R for Biology",
    "section": "Accessibility needs",
    "text": "Accessibility needs\nIf you require accommodations for a disability, or have any accessibility concerns about the course or course materials, please notify your course instructors (Mete and Vicki), or contact Accessibility Services, as soon as possible regarding accommodations."
  },
  {
    "objectID": "index.html#course-learning-outcomes",
    "href": "index.html#course-learning-outcomes",
    "title": "EEB313: Quantitative Methods in R for Biology",
    "section": "Course learning outcomes",
    "text": "Course learning outcomes\n\nDevelop proficiency in the programming language R.\nUse R to apply statistical tools to analyze and interpret data.\nDevelop an understanding of mathematical models.\nDevelop proficiency in using the command line and Git.\nIntegrate appropriate techniques to analyze a variety of data types and formats.\nLearn and use techniques and best practices for reproducible, high-quality science.\nLearn how to work as part of a research team to produce a scientific product.\n\n\nLecture schedule\n\n\n\n\n\n\n\n\n\nWeek\nDate\nTopic\nInstructor\n\n\n\n\n1\nSep 7\nIntro to course, programming, RStudio\nVicki\n\n\n2\nSep 12\nR Markdown, project workflows\nVicki\n\n\n2\nSep 14\nBase R: Assignment, vectors, functions\nMete\n\n\n3\nSep 19\nData frames, intro to dplyr.\nVicki\n\n\n3\nSep 21\nData wrangling in dplyr\nVicki\n\n\n4\nSep 26\nData visualization in ggplot\nVicki\n\n\n4\nSep 28\nExploratory data analysis\nZoe\n\n\n5\nOct 03\nIntroduction to statistical inference\nMete\n\n\n5\nOct 05\nSimple linear models and generalized linear models\nMete\n\n\n6\nOct 10\nMixed models\nMete/Vicki\n\n\n6\nOct 12\nModel selection\nMete/Vicki\n\n\n7\nOct 17\nMultivariate statistics\nJessie\n\n\n7\nOct 19\nIntro to command line and GitHub\nMete/Vicki\n\n\n8\nOct 24\nComputer-intensive methods\nMete\n\n\n8\nOct 26\nMathematical models in ecology and evolution I\nMete\n\n\n9\nOct 31\nMathematical models in ecology and evolution II\nMete\n\n\n9\nNov 02\nWrap-up, review\nZoe/Jessie\n\n\n10\nNov 07\nReading break\n-\n\n\n10\nNov 09\nReading break\n-\n\n\n11\nNov 14\nProject work\n\n\n\n11\nNov 16\nProject work\n\n\n\n12\nNov 21\nProject work\n\n\n\n12\nNov 23\nProject work\n\n\n\n13\nNov 28\nProject work\n\n\n\n13\nNov 30\nProject work\n\n\n\n14\nDec 05\nGroup presentations\nEveryone\n\n\n\n\n\nLecture readings\nYou will find a list of recommended readings posted under “Resources”. Since there are no exams in this class, you will not be tested on the readings directly. However, we highly recommend that you go through these readings as they were chosen to help you understand lecture material better (e.g., provides context for data that was used) as well as serve as resources for you if you wish to pursue any specific topic further. We also compiled a list of open-access R and statistics resources for your reference. You can find this list in the Readings folder on Quercus.\n\n\nAssessment schedule\n\n\n\n\n\n\n\n\n\n\nAssignment\nType\nSubmitted on\nDue date\nMarks\n\n\n\n\nBasic R and dplyr\nIndividual\nQuercus\nSep 28\n8\n\n\nProject proposal\nGroup\nGitHub\nOct 03\n4\n\n\ndplyr and tidy data\nIndividual\nQuercus\nOct 05\n8\n\n\nData exploration\nIndividual\nQuercus\nOct 12\n8\n\n\nLM, GLM, & LMM\nIndividual\nQuercus\nOct 19\n8\n\n\nCommand Line\nIndividual\nGitHub\nOct 26\n8\n\n\nMid-project update\nGroup\nGitHub\nNov 02\n6\n\n\nChallenge assignment\nIndividual\nGitHub\nNov 17\n20\n\n\nPresentation\nGroup\nIn-class\nDec 05\n10\n\n\nFinal report\nGroup\nGitHub\nDec 08\n20\n\n\n\nThere are 100 marks in total. Your final course mark will be the sum of your assignment scores, which will be translated to a letter grade according to the official grading scale of the Faculty of Arts and Science.\nAssignments will be distributed and submitted in the R Markdown format via Quercus. Assignments will be handed out on Thursdays after class and are due at 8:00 PM on the following Thursday.\nThe Challenge Assignment is equivalent to a take home exam. The format will be the same as the other assignments, but this assignment is designed challenge you to go a little beyond what was taught in class. It will be distributed on 9:00 AM on Nov 13, and it will be due 11:59 PM on Nov 17. Students are welcome to work in a group on this assignment, but each student must submit their own original work. No extensions will be granted on this assignment except under the same extra-ordinary circumstances akin to those under which an exam might be deferred. We only expect you to do your best!\nAs per our stance on supporting student’s mental health, we are happy to accommodate a 72-hour extension for one of the assignments, no questions asked. Otherwise, except under extenuating circumstances, there will be a penalty of 5% per day (including weekends) for all late submissions. If you foresee needing an extension, please email both Vicki and Mete as soon as possible. This policy does not apply to the Challenge Assignment, Presentation and Final Report."
  },
  {
    "objectID": "index.html#improving-your-writing-skills",
    "href": "index.html#improving-your-writing-skills",
    "title": "EEB313: Quantitative Methods in R for Biology",
    "section": "Improving your writing skills",
    "text": "Improving your writing skills\nEffective communication is crucial in science. The University of Toronto provides services to help you improve your writing, from general advices on effective writing to writing centers and writing courses. The Faculty of Arts & Science also offers an English Language Learning (ELL) program, which provides free individualized instruction in English skills. Take advantage of these!"
  },
  {
    "objectID": "index.html#academic-integrity",
    "href": "index.html#academic-integrity",
    "title": "EEB313: Quantitative Methods in R for Biology",
    "section": "Academic integrity",
    "text": "Academic integrity\nYou should be aware of the University of Toronto Code of Behaviour on Academic Matters. Also see How Not to Plagiarize. Notably, it is NOT appropriate to use large sections from internet sources, and inserting a few words here and there does not make it an original piece of writing. Be careful in using internet sources – most online material are not reviewed and there are many errors out there. Make sure you read material from many sources (published, peer-reviewed, trusted internet sources) and that you write an original text using this information. Always cite your sources. In case of doubt about plagiarism, talk to your instructors and TAs. Please make sure that what you submit for the final project does not overlap with what you submit for other classes, such as the 4th-year research project.\n\nOn the use of Generative AI\nThe knowing use of generative artificial intelligence tools, including ChatGPT and other AI writing and coding assistants, for the completion of, or to support the completion of, the assignments, the challenge assignment, or the final project is prohibited and may be considered an academic offense."
  },
  {
    "objectID": "index.html#fas-student-engagement-programs",
    "href": "index.html#fas-student-engagement-programs",
    "title": "EEB313: Quantitative Methods in R for Biology",
    "section": "FAS student engagement programs",
    "text": "FAS student engagement programs\nThere are a few programs on campus aimed at increasing student engagement with their coursework and keeping them socially connected. Recognized Study Groups are voluntary, peer-led study groups of up to 8 students enrolled in the same course. Meet to Complete are online drop-in study sessions for A&S undergrads. These are worth checking out if you are interested in participating in a study group."
  },
  {
    "objectID": "about-us.html#course-instructors",
    "href": "about-us.html#course-instructors",
    "title": "The 2023 teaching team",
    "section": "Course instructors",
    "text": "Course instructors\nMete Yuksel (mete.yuksel@mail.utoronto.ca)\nMete is a 2nd year PhD student in the Dept. Ecology and Evolutionary Biology at UTSG, and is co-advised by Matt Osmond & Nicole Mideo. He uses mathematical models to address questions in evolutionary genetics and ecology. He is currently developing theory to understand patterns, causes, and consequences of pathogen recombination. Mete was an undergraduate math & statistics student at the University of Idaho. There, he worked on the ecology of gene drive interventions against vectored diseases, understanding how continuous spatial structure can affect species coexistence, and forecasting the dynamics of Chinook salmon in the Willamette River system. He loves modeling, statistics, and programming in R (among other languages!) - and is thrilled to be teaching this course! Outside of science, he enjoys listening to podcasts, cooking, and cycling between Toronto neighborhoods in search of coffee.\nVicki Zhang (vm.zhang@mail.utoronto.ca)\nVicki is a PhD Candidate in Peter Kotanen’s lab at UTM. She studies invasive species at the edge of the Arctic, and how climate change and anthropogenic stressors might affect the persistence and spread of invasive species in Canada’s tundra and boreal forests. Vicki does fieldwork in Churchill, Manitoba (the polar bear capital of the world) in the summer, but does a lot of data analyses and modelling on R throughout the fall and winter semesters. She took EEB313 in 2018, and it was her favourite undergraduate course because everything about R just clicked, and she learned so much about coding, statistics, and modelling (her previous encounters with R and stats went very poorly). Now, she spends a lot of time making sure that her data is clean and her code is fast - it’s so satisfying when every line finally runs! For Vicki, the best way to work in R is with a big cup of coffee, soft classical music in the background, and her cat Remi napping next to her."
  },
  {
    "objectID": "about-us.html#teaching-assistants",
    "href": "about-us.html#teaching-assistants",
    "title": "The 2023 teaching team",
    "section": "Teaching assistants",
    "text": "Teaching assistants\nZoe Humphries (zoe.humphries@mail.utoronto.ca)\nZoë is a PhD student in the Wright and Barrett labs at UTSG. She studies the genome of a weedy plant to better understand how transposable elements affect sex chromosome evolution. She taught herself how to use R during her honours thesis and fell in love because it was much kinder than Lisp or C++ and, most importantly, because aesthetics. Zoë makes plots from aggressively large genomic data sets and spends a lot of time literally bash-ing her data into a file small enough for her computer to load into RStudio. For Zoë, the best way to work in R is while patting her puppies.\nJessie Wang (jae.wang@mail.utoronto.ca)\nJessie is a PhD student in the Frederickson lab at UTSG. She studies plant-microbe interactions using high-throughput experimentation in duckweeds. She fell in love with R during her time as an undergraduate and took EEB313 in 2020, simultaneously sharpening her coding skills while conducting research alone in the lab. Jessie loves to spend too much money on fancy coffee as she types away, making sure her code is well-annotated and her figures look beautiful. Outside of work, she enjoys caring for her many houseplants and aquariums, finding new delicious eats, and admiring other people’s pets."
  },
  {
    "objectID": "downloadingR.html#introduction",
    "href": "downloadingR.html#introduction",
    "title": "Downloading R",
    "section": "Introduction",
    "text": "Introduction\nThis course makes extensive use of R and RStudio. If you have any issues installing R or RStudio, let’s resolve them in advance so that you can make the most of our time together! As you follow these instructions, don’t worry if you don’t understand exactly what is going on - we will go through it all again during the first lecture! The goal here is to ensure that your computer is set up and ready for action. If you can’t complete these steps, please email Vicki and Mete as soon as possible."
  },
  {
    "objectID": "downloadingR.html#tech-requirements",
    "href": "downloadingR.html#tech-requirements",
    "title": "Downloading R",
    "section": "Tech Requirements",
    "text": "Tech Requirements\nFirst, make sure that your personal computer meets meets these requirements:\n\n1024×768 screen resolution,\n1.5GHz CPU,\n2GB RAM,\n10GB free disk space,\na recent version of Windows, Mac OS, or Linux is installed.\n\nNext, check that a robust internet browser such as Firefox, Safari or Google is installed. (Internet Explorer will not work.) Finally, make that a PDF viewer (e.g., Adobe Acrobat, Preview) is installed. It is fine if no PDF viewer is installed if you can view PDFs on your web browser."
  },
  {
    "objectID": "downloadingR.html#download-r-and-rstudio",
    "href": "downloadingR.html#download-r-and-rstudio",
    "title": "Downloading R",
    "section": "Download R and RStudio",
    "text": "Download R and RStudio\n\nDownload R, a free software environment for statistical computing and graphics from CRAN, the Comprehensive R Archive Network. We recommend you install a precompiled binary distribution for your operating system – use the links up at the top of the CRAN page!\n\nNote: MacBook users with an Apple Silicon chip (e.g., M1 or M2) should install the “arm64” version of R, while MacBook users with an Intel chip should install the regular (64-bit) version of R. You can check your laptop’s hardware specifications by clicking the Apple icon (top left corner) \\&gt; About This Mac.\n\nInstall RStudio, a graphical user interface (GUI) for R. Click the link under “2: Install RStudio”. RStudio comes with a text editor, so there is no immediate need to install a separate stand-alone editor.\n\nIf R is already installed, ensure that the R version is 4.0 or higher. You can do this by opening RStudio, where you should see a multi-section window like below. Locate the quadrant named “Console”, and put your cursor at the start of the prompt indicated by the &gt; symbol and where the red arrow is pointing. Type or copy sessionInfo() - make sure that only the I at the start of Info is capitalized and you are including the round brackets. Press enter to run this command and R should return an output to you. The first line shows what version of R is installed. Ensure that the R version installed is at least 4.0."
  },
  {
    "objectID": "downloadingR.html#download-packages",
    "href": "downloadingR.html#download-packages",
    "title": "Downloading R",
    "section": "Download Packages",
    "text": "Download Packages\n\nTinyTex\nThere is one package we have to install first before we can create PDF reports, which will be necessary for assignments and the project. Copy and paste into the console (where the \\&gt; symbol is) the two lines of code below to install a package called tinytex.\n\ninstall.packages(\"tinytex\") \ntinytex::install_tinytex()\n\n\n\nAll packages\n\nCopy and paste the below code into your console.\n\n\ninstall.packages(c(\"tidyverse\", \"here\", \"knitr\", \"datasauRus\", \"car\",\n                   \"lme4\", \"lmerTest\", \"ggalt\", \"MuMIn\", \"sjmisc\",\n                   \"lsmeans\", \"ggfortify\", \"vegan\"), dependencies = TRUE)\n\nDuring installation, if you ever get the below message, click “No”.\n\nIf you get the message “Do you want to install from sources the packages which need compilation? (Yes/no/cancel)” in the Console, type “Yes” and press enter.\n\nCheck that these packages have been installed correctly. To do this, go to the bottom right pane and click the tab for “Packages”. If you can search for and find the below packages, then they have been installed! They do not need to be checked off. Alternatively, go to the Console and type library(lme4) to verify that the lme4 package is installed. An error along the lines “there is no package called lme4” will be returned if the package is not installed."
  },
  {
    "objectID": "lec00-rstudio.html#lesson-preamble",
    "href": "lec00-rstudio.html#lesson-preamble",
    "title": "1  Getting started with RStudio and R Notebook",
    "section": "Lesson preamble",
    "text": "Lesson preamble\n\n1.0.1 Lesson objectives\n\nIntroduce students to the RStudio interface\nIntroduce the Markdown syntax and how to use it within the R Notebook\n\n1.0.2 Learning outline\n\nExplore RStudio interface (20 mins)\nRMarkdown (20 mins)\nGenerating reports (10 mins)\nKnit to PDF and submit on Quercus (10 mins)"
  },
  {
    "objectID": "lec00-rstudio.html#working-with-computers",
    "href": "lec00-rstudio.html#working-with-computers",
    "title": "1  Getting started with RStudio and R Notebook",
    "section": "Working with computers",
    "text": "Working with computers\nBefore we get into more practical matters, we want to provide a brief background to the idea of working with computers. Essentially, computer work is about humans communicating with a computer by modulating flows of current in the hardware in order to get the computer to carry out advanced calculations that we are unable to efficiently compute ourselves. Early examples of human computer communication were quite primitive and included physically disconnecting a wire and connecting it again in a different spot. Luckily, we are not doing this anymore; instead we have programs with graphical user interfaces with menus and buttons that enable more efficient human to computer communication.\n\n1.0.3 Graphical user interfaces vs. text based user interfaces\nAn example of such a program that many of you are familiar with is spreadsheet software such as Microsoft Excel. Here, all the functionality of the program is accessible via hierarchical menus, and clicking buttons sends instructions to the computer, which then responds and sends the results back to your screen. For instance, I can click a button to send the instruction of coloring this cell yellow, and the computer interprets my instructions and then displays the results on the screen.\nSpreadsheet software is great for viewing and entering small data sets and creating simple visualizations fast. However, it can be tricky to design figures, create automatic reproducible analysis workflows, perform advanced calculations, and reliably clean data sets. Even when using a spreadsheet program to record data, it is often beneficial to have some some basic programming skills to facilitate the analyses of those data.\nTyping commands directly instead of searching for them in menus is a more efficient approach to communicate with the computer and a powerful way of doing data analysis. This is initially intimidating for almost all people, but if you compare it to learning a new language, the process becomes more intuitive: when learning a language, you would initially string together sentences by looking up individual words in the dictionary. As you improve, you will only reference the dictionary occasionally since you already know most of the words. Eventually, you will throw the dictionary out altogether because it is faster and more precise to speak directly. In contrast, graphical programs force you to look up every word in the dictionary every time, even if you already know what to say.\n\n\n1.0.4 RStudio and the R Notebook\nRStudio includes the R console, but also many other convenient functionalities, which makes it easier to get started and to work with R. When you launch RStudio, you will see four panels. Starting at the top left and going clockwise, these panels are:\n\nThe text editor panel. This is where we can write scripts, i.e. putting several commands of code together and saving them as a text document so that they are accessible for later and so that we can execute them all at once by running the script instead of typing them in one by one.\nThe environment panel, which shows us all the files and objects we currently loaded into R.\nThe files-plots-help panel. This panel shows the files in the current directory (the folder we are working out of), any plots we make later, and also documentation for various packages and functions. Here, the documentation is formatted in a way that is easier to read and also provides links to the related sections.\nThe console is another space we can input code, only now the code is executed immediately and doesn’t get saved at the end.\n\nTo change the appearance of your RStudio, navigate to Tools &gt; Global Options &gt; Appearance. You can change the the font and size, and the editor theme. The default is “Textmate”, but if you like dark mode, I recommend “Tomorrow Night Bright”. You can also change how your panels are organized. I like to have my Console and history below my Source, and that way I can see my working environment next to my code. That way, I know if an error I am getting is because I am missing an object or I renamed something oddly. Let’s change that now. I recommend playing around with the appearance if you prefer a different layout or colour scheme. Do what makes you the most productive!\nAnother very useful thing with RStudio is that you have access to some excellent cheat sheets in PDF format straight from the menu: Help -&gt; Cheatsheets!\nIn the RStudio interface, we will be writing code in a format called the R Notebook. As the name entails, this interface works like a notebook for code, as it allows us to save notes about what the code is doing, the code itself, and any output we get, such as plots and tables, all together in the same document.\nWhen we are in the Notebook, the text we write is normal plain text, just as if we would be writing it in a text document. If we want to execute some R code, we need to insert a code chunk.\nYou insert a code chunk by either clicking the “Insert” button or pressing Ctrl/Command + Alt + i simultaneously. You could also type out the surrounding backticks, but this would take longer. To run a code chunk, you press the green arrow, or Ctrl/Command + Shift + Enter.\n\n\n1+1\n#&gt; [1] 2\n\nAs you can see, the output appears right under the code block.\nThis is a great way to perform explore your data, since you can do your analysis and write comments and conclusions right under it all in the same document. A powerful feature of this workflow is that there is no extra time needed for code documentation and note-taking, since you’re doing your analyses and taking notes at the same time. This makes it great for both taking notes at lectures and to have as a reference when you return to your code in the future."
  },
  {
    "objectID": "lec00-rstudio.html#r-markdown",
    "href": "lec00-rstudio.html#r-markdown",
    "title": "1  Getting started with RStudio and R Notebook",
    "section": "1.1 R Markdown",
    "text": "1.1 R Markdown\nThe text format we are using in the R Notebook is called R Markdown. This format allows us to combine R code with the Markdown text format, which enables the use of certain characters to specify headings, bullet points, quotations and even citations. A simple example of how to write in Markdown is to use a single asterisk or underscore to emphasize text (*emphasis*) and two asterisks or underscores to strongly emphasize text (**strong emphasis**). When we convert our R Markdown text to other file formats, these will show up as italics and bold typeface, respectively. If you have used WhatsApp, you might already be familiar with this style of writing. In case you haven’t seen it before, you have just learned something about WhatsApp in your quantitative methods class…\nTo learn more about R Markdown, you can read the cheat sheets in RStudio and RStudio Markdown reference online.\n\n1.1.1 Saving data and generating reports\nTo save our notes, code, and graphs, all we have to do is to save the R Notebook file, and the we can open it in RStudio next time again. However, if we want someone else to look at this, we can’t always just send them the R Notebook file, because they might not have RStudio installed. Another great feature of R Notebooks is that it is really easy to export them to HTML, MS word, or PDF documents with figures and professional typesetting. There are actually many academic papers that are written entirely in this format and it is great for assignments and reports. (You might even use it to communicate with your collaborators!) Since R Notebook files convert to HTML, it is also easy to publish simple and good-looking websites in it, in which code chunks are embedded nicely within the text.\nLet’s try to create a document in R.\nFirst, let’s set up the YAML block. This is found at the top of your document, and it is where you specify the title of your document, what kind of output you want, and a few other things such as author list and date.\n\n\n---\ntitle: \"Your title here\"\nauthor: \"Your name here\"\ndate: \"Insert date\"\n---\n\nThen, let’s type some notes and code together!\n\n\n# Attempt 1\n\n## Here goes!\n\n\n\n1+2+3+4\n#&gt; [1] 10\n\nx &lt;- seq(0,100,1)\n\nplot(x, type = \"l\")\n\n\n\n\n\n\n\n\nLet’s see what this looks like. To create the output document, we poetically say that we will knit our R Markdown into the HTML document. Luckily, it is much simpler than actually knitting something. Simply press the Knit button here and the new document will be created.\nAs you can see in the knitted document, the title showed up as we would expect, the lines with pound sign(s) in front of them were converted into headers and we can see both the code and its output! So the plots are generated directly in the report without us having to cut and paste images! If we change something in the code, we don’t have to find the new images and paste it in again, the correct one will appear right in your code.\nWhen you quit, R will ask you if you want to save the workspace (that is, all of the variables you have defined in this session); in general, you should say “no” to avoid clutter and unintentional confusion of results from different sessions. Note: When you say “yes” to saving your workspace, it is saved in a hidden file named .RData. By default, when you open a new R session in the same directory, this workspace is loaded and a message informing you so is printed: [Previously saved workspace restored]."
  },
  {
    "objectID": "lec00-rstudio.html#exercise",
    "href": "lec00-rstudio.html#exercise",
    "title": "1  Getting started with RStudio and R Notebook",
    "section": "Exercise",
    "text": "Exercise\n\n1.1.2 Knitting and Submitting on Quercus\nPractice knitting and uploading your file to Quercus!\nClick the dropdown “Knit” button at the top of the screen, and click “PDF”.\nNote: for assignments, submit PDF versions. If you are having trouble rendering your knitted file, you can submit HTML formats, or your .Rmd file as a last resort. Note that, if you are unable to knit your assignment, chances are there is an error. Make sure to double-check your code!\nHead on over to Quercus and submit your knitted PDF to “Assignment 0”."
  }
]