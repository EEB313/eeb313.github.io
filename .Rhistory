summary(model)
age <- sample(size = 10000, x = seq(0,80,0.1), replace = T)
linear_predictor <- 0.01 + 3*scale(age)
prob <- 1/(1+exp(-linear_predictor))
disease_status <- c()
for (i in 1:length(prob)){
disease_status[i] <- rbinom(n = 1, size = 1, prob = prob[i])
}
data <- data.frame(age = age, disease_status = disease_status)
data %>% pivot_longer(! age) %>% ggplot(aes(x = age, y = value)) +
geom_point() + geom_smooth(method = "glm",
method.args = list(family = "binomial")
) + labs(y = "disease status")
model <- glm(disease_status~age, family = binomial, data = data)
summary(model)
age <- sample(size = 100, x = seq(0,80,0.1), replace = T)
linear_predictor <- 3*scale(age)
prob <- 1/(1+exp(-linear_predictor))
disease_status <- c()
for (i in 1:length(prob)){
disease_status[i] <- rbinom(n = 1, size = 1, prob = prob[i])
}
data <- data.frame(age = age, disease_status = disease_status)
data %>% pivot_longer(! age) %>% ggplot(aes(x = age, y = value)) +
geom_point() + geom_smooth(method = "glm",
method.args = list(family = "binomial")
) + labs(y = "disease status")
model <- glm(disease_status~age, family = binomial, data = data)
summary(model)
age <- sample(size = 100, x = seq(0,80,0.1), replace = T)
linear_predictor <- 0.001*scale(age)
prob <- 1/(1+exp(-linear_predictor))
disease_status <- c()
for (i in 1:length(prob)){
disease_status[i] <- rbinom(n = 1, size = 1, prob = prob[i])
}
data <- data.frame(age = age, disease_status = disease_status)
data %>% pivot_longer(! age) %>% ggplot(aes(x = age, y = value)) +
geom_point() + geom_smooth(method = "glm",
method.args = list(family = "binomial")
) + labs(y = "disease status")
model <- glm(disease_status~age, family = binomial, data = data)
summary(model)
age <- sample(size = 100, x = seq(0,80,0.1), replace = T)
linear_predictor <- 0.01*scale(age)
prob <- 1/(1+exp(-linear_predictor))
disease_status <- c()
for (i in 1:length(prob)){
disease_status[i] <- rbinom(n = 1, size = 1, prob = prob[i])
}
data <- data.frame(age = age, disease_status = disease_status)
data %>% pivot_longer(! age) %>% ggplot(aes(x = age, y = value)) +
geom_point() + geom_smooth(method = "glm",
method.args = list(family = "binomial")
) + labs(y = "disease status")
model <- glm(disease_status~age, family = binomial, data = data)
summary(model)
age <- sample(size = 100, x = seq(0,80,0.1), replace = T)
linear_predictor <- 0.1*scale(age)
prob <- 1/(1+exp(-linear_predictor))
disease_status <- c()
for (i in 1:length(prob)){
disease_status[i] <- rbinom(n = 1, size = 1, prob = prob[i])
}
data <- data.frame(age = age, disease_status = disease_status)
data %>% pivot_longer(! age) %>% ggplot(aes(x = age, y = value)) +
geom_point() + geom_smooth(method = "glm",
method.args = list(family = "binomial")
) + labs(y = "disease status")
model <- glm(disease_status~age, family = binomial, data = data)
summary(model)
age <- sample(size = 100, x = seq(0,80,0.1), replace = T)
linear_predictor <- 3*scale(age)
prob <- 1/(1+exp(-linear_predictor))
disease_status <- c()
for (i in 1:length(prob)){
disease_status[i] <- rbinom(n = 1, size = 1, prob = prob[i])
}
data <- data.frame(age = age, disease_status = disease_status)
data %>% pivot_longer(! age) %>% ggplot(aes(x = age, y = value)) +
geom_point() + geom_smooth(method = "glm",
method.args = list(family = "binomial")
) + labs(y = "disease status")
model <- glm(disease_status~age, family = binomial, data = data)
summary(model)
age <- sample(size = 100, x = seq(0,80,0.1), replace = T)
linear_predictor <- 10*scale(age)
prob <- 1/(1+exp(-linear_predictor))
disease_status <- c()
for (i in 1:length(prob)){
disease_status[i] <- rbinom(n = 1, size = 1, prob = prob[i])
}
data <- data.frame(age = age, disease_status = disease_status)
data %>% pivot_longer(! age) %>% ggplot(aes(x = age, y = value)) +
geom_point() + geom_smooth(method = "glm",
method.args = list(family = "binomial")
) + labs(y = "disease status")
model <- glm(disease_status~age, family = binomial, data = data)
summary(model)
age <- sample(size = 100, x = seq(0,80,0.1), replace = T)
linear_predictor <- 5*scale(age)
prob <- 1/(1+exp(-linear_predictor))
disease_status <- c()
for (i in 1:length(prob)){
disease_status[i] <- rbinom(n = 1, size = 1, prob = prob[i])
}
data <- data.frame(age = age, disease_status = disease_status)
data %>% pivot_longer(! age) %>% ggplot(aes(x = age, y = value)) +
geom_point() + geom_smooth(method = "glm",
method.args = list(family = "binomial")
) + labs(y = "disease status")
model <- glm(disease_status~age, family = binomial, data = data)
summary(model)
age <- sample(size = 1000, x = seq(0,80,0.1), replace = T)
linear_predictor <- 5*scale(age)
prob <- 1/(1+exp(-linear_predictor))
disease_status <- c()
for (i in 1:length(prob)){
disease_status[i] <- rbinom(n = 1, size = 1, prob = prob[i])
}
data <- data.frame(age = age, disease_status = disease_status)
data %>% pivot_longer(! age) %>% ggplot(aes(x = age, y = value)) +
geom_point() + geom_smooth(method = "glm",
method.args = list(family = "binomial")
) + labs(y = "disease status")
model <- glm(disease_status~age, family = binomial, data = data)
summary(model)
age <- sample(size = 50, x = seq(0,80,0.1), replace = T)
linear_predictor <- 5*scale(age)
prob <- 1/(1+exp(-linear_predictor))
disease_status <- c()
for (i in 1:length(prob)){
disease_status[i] <- rbinom(n = 1, size = 1, prob = prob[i])
}
data <- data.frame(age = age, disease_status = disease_status)
data %>% pivot_longer(! age) %>% ggplot(aes(x = age, y = value)) +
geom_point() + geom_smooth(method = "glm",
method.args = list(family = "binomial")
) + labs(y = "disease status")
model <- glm(disease_status~age, family = binomial, data = data)
summary(model)
age <- sample(size = 100, x = seq(0,80,0.1), replace = T)
linear_predictor <- 3*scale(age)
prob <- 1/(1+exp(-linear_predictor))
disease_status <- c()
for (i in 1:length(prob)){
disease_status[i] <- rbinom(n = 1, size = 1, prob = prob[i])
}
data <- data.frame(age = age, disease_status = disease_status)
data %>% pivot_longer(! age) %>% ggplot(aes(x = age, y = value)) +
geom_point() + geom_smooth(method = "glm",
method.args = list(family = "binomial")
) + labs(y = "disease status")
model <- glm(disease_status~age, family = binomial, data = data)
summary(model)
age <- sample(size = 100, x = seq(0,100,0.1), replace = T)
linear_predictor <- 3*scale(age)
prob <- 1/(1+exp(-linear_predictor))
disease_status <- c()
for (i in 1:length(prob)){
disease_status[i] <- rbinom(n = 1, size = 1, prob = prob[i])
}
data <- data.frame(age = age, disease_status = disease_status)
data %>% pivot_longer(! age) %>% ggplot(aes(x = age, y = value)) +
geom_point() + geom_smooth(method = "glm",
method.args = list(family = "binomial")
) + labs(y = "disease status")
model <- glm(disease_status~age, family = binomial, data = data)
summary(model)
model <- glm(disease_status~scale(age), family = binomial, data = data)
summary(model)
age <- sample(size = 1000, x = seq(0,100,0.1), replace = T)
linear_predictor <- 3*scale(age)
prob <- 1/(1+exp(-linear_predictor))
disease_status <- c()
for (i in 1:length(prob)){
disease_status[i] <- rbinom(n = 1, size = 1, prob = prob[i])
}
data <- data.frame(age = age, disease_status = disease_status)
data %>% pivot_longer(! age) %>% ggplot(aes(x = age, y = value)) +
geom_point() + geom_smooth(method = "glm",
method.args = list(family = "binomial")
) + labs(y = "disease status")
model <- glm(disease_status~scale(age), family = binomial, data = data)
summary(model)
age <- sample(size = 10000, x = seq(0,100,0.1), replace = T)
linear_predictor <- 3*scale(age)
prob <- 1/(1+exp(-linear_predictor))
disease_status <- c()
for (i in 1:length(prob)){
disease_status[i] <- rbinom(n = 1, size = 1, prob = prob[i])
}
data <- data.frame(age = age, disease_status = disease_status)
data %>% pivot_longer(! age) %>% ggplot(aes(x = age, y = value)) +
geom_point() + geom_smooth(method = "glm",
method.args = list(family = "binomial")
) + labs(y = "disease status")
model <- glm(disease_status~scale(age), family = binomial, data = data)
summary(model)
age <- sample(size = 100, x = seq(0,100,0.1), replace = T)
linear_predictor <- 3*scale(age)
prob <- 1/(1+exp(-linear_predictor))
disease_status <- c()
for (i in 1:length(prob)){
disease_status[i] <- rbinom(n = 1, size = 1, prob = prob[i])
}
data <- data.frame(age = age, disease_status = disease_status)
data %>% pivot_longer(! age) %>% ggplot(aes(x = age, y = value)) +
geom_point() + geom_smooth(method = "glm",
method.args = list(family = "binomial")
) + labs(y = "disease status")
model <- glm(disease_status~scale(age), family = binomial, data = data)
summary(model)
age <- sample(size = 100, x = seq(0,100,0.1), replace = T)
linear_predictor <- 0.1*scale(age)
prob <- 1/(1+exp(-linear_predictor))
disease_status <- c()
for (i in 1:length(prob)){
disease_status[i] <- rbinom(n = 1, size = 1, prob = prob[i])
}
data <- data.frame(age = age, disease_status = disease_status)
data %>% pivot_longer(! age) %>% ggplot(aes(x = age, y = value)) +
geom_point() + geom_smooth(method = "glm",
method.args = list(family = "binomial")
) + labs(y = "disease status")
model <- glm(disease_status~scale(age), family = binomial, data = data)
summary(model)
age <- sample(size = 100, x = seq(0,100,0.1), replace = T)
linear_predictor <- scale(age)
prob <- 1/(1+exp(-linear_predictor))
disease_status <- c()
for (i in 1:length(prob)){
disease_status[i] <- rbinom(n = 1, size = 1, prob = prob[i])
}
data <- data.frame(age = age, disease_status = disease_status)
data %>% pivot_longer(! age) %>% ggplot(aes(x = age, y = value)) +
geom_point() + geom_smooth(method = "glm",
method.args = list(family = "binomial")
) + labs(y = "disease status")
model <- glm(disease_status~scale(age), family = binomial, data = data)
summary(model)
age <- sample(size = 10000, x = seq(0,100,0.1), replace = T)
linear_predictor <- scale(age)
prob <- 1/(1+exp(-linear_predictor))
disease_status <- c()
for (i in 1:length(prob)){
disease_status[i] <- rbinom(n = 1, size = 1, prob = prob[i])
}
data <- data.frame(age = age, disease_status = disease_status)
data %>% pivot_longer(! age) %>% ggplot(aes(x = age, y = value)) +
geom_point() + geom_smooth(method = "glm",
method.args = list(family = "binomial")
) + labs(y = "disease status")
model <- glm(disease_status~scale(age), family = binomial, data = data)
summary(model)
age <- sample(size = 100, x = seq(0,100,0.1), replace = T)
linear_predictor <- scale(age)
prob <- 1/(1+exp(-linear_predictor))
disease_status <- c()
for (i in 1:length(prob)){
disease_status[i] <- rbinom(n = 1, size = 1, prob = prob[i])
}
data <- data.frame(age = age, disease_status = disease_status)
data %>% pivot_longer(! age) %>% ggplot(aes(x = age, y = value)) +
geom_point() + geom_smooth(method = "glm",
method.args = list(family = "binomial")
) + labs(y = "disease status")
model <- glm(disease_status~scale(age), family = binomial, data = data)
summary(model)
age <- sample(size = 100, x = seq(0,100,0.1), replace = T)
linear_predictor <- 0.3*scale(age)
prob <- 1/(1+exp(-linear_predictor))
disease_status <- c()
for (i in 1:length(prob)){
disease_status[i] <- rbinom(n = 1, size = 1, prob = prob[i])
}
data <- data.frame(age = age, disease_status = disease_status)
data %>% pivot_longer(! age) %>% ggplot(aes(x = age, y = value)) +
geom_point() + geom_smooth(method = "glm",
method.args = list(family = "binomial")
) + labs(y = "disease status")
model <- glm(disease_status~scale(age), family = binomial, data = data)
summary(model)
age <- sample(size = 100, x = seq(0,100,0.1), replace = T)
linear_predictor <- 0.5*scale(age)
prob <- 1/(1+exp(-linear_predictor))
disease_status <- c()
for (i in 1:length(prob)){
disease_status[i] <- rbinom(n = 1, size = 1, prob = prob[i])
}
data <- data.frame(age = age, disease_status = disease_status)
data %>% pivot_longer(! age) %>% ggplot(aes(x = age, y = value)) +
geom_point() + geom_smooth(method = "glm",
method.args = list(family = "binomial")
) + labs(y = "disease status")
model <- glm(disease_status~scale(age), family = binomial, data = data)
summary(model)
data_generator <- function(sample_size = 100){
age <- sample(size = 100, x = seq(0,100,0.1), replace = T)
linear_predictor <- 0.75*scale(age)
prob <- 1/(1+exp(-linear_predictor))
disease_status <- c()
for (i in 1:length(prob)){
disease_status[i] <- rbinom(n = 1, size = 1, prob = prob[i])
}
return(data.frame(age = age, disease_status = disease_status))
}
data <- data_generator()
data %>% pivot_longer(! age) %>%
ggplot(aes(x = age, y = value)) + geom_point() +
geom_smooth(method = "glm", method.args = list(family = "binomial")
) + labs(y = "disease status")
model <- glm(disease_status~scale(age), family = binomial, data = data)
summary(model)
model
model
summary(model)$coeffs
summary(model)$coeffs
summary(model)$coeffs[2]
summary(model)
model$effects
summary(model)
summary(model)$p
summary(model)$coefs
summary(model)$coeff
summary(model)$coeff[2]
amily = binomial, data = data)
summary(model)$coefficients[,4]
summary(model)$coefficients[2,4]
sims <- 1000
for (i in 1:sims){
data <- data_generator(sample_size)
model <- glm(disease_status~scale(age), family = binomial, data = data)
summary(model)$coefficients[2,4]
}
sims <- 1000
pvalues <- c()
for (i in 1:sims){
data <- data_generator(sample_size)
model <- glm(disease_status~scale(age), family = binomial, data = data)
pvalues[i] <- summary(model)$coefficients[2,4]
}
pvalues
which(pvalues < 0.01)
which(pvalues < 0.001)
pvalues
which(pvalues < 0.01)
all(pvalues < 0.01)
which(pvalues < 0.01)
length(which(pvalues < 0.01))
length(which(pvalues < 0.01))/length(pvalues)
power_analysis_function <- function(sample_size = 100){
sims <- 100
pvalues <- c()
for (i in 1:sims){
data <- data_generator(sample_size)
model <- glm(disease_status~scale(age), family = binomial, data = data)
pvalues[i] <- summary(model)$coefficients[2,4]
}
power_estimate <- length(which(pvalues < 0.01))/length(pvalues)
return(power_estimate)
}
sample_sizes <- seq(0,500,20)
for (i in 1:length(sample_sizes)){
power_estimates[i] <- power_analysis_function(sample_size = sample_size)
}
power_analysis_function <- function(sample_size = 100){
sims <- 100
pvalues <- c()
for (i in 1:sims){
data <- data_generator(sample_size)
model <- glm(disease_status~scale(age), family = binomial, data = data)
pvalues[i] <- summary(model)$coefficients[2,4]
}
power_estimate <- length(which(pvalues < 0.01))/length(pvalues)
return(power_estimate)
}
sample_sizes <- seq(0,500,20); power_estimates <- c()
for (i in 1:length(sample_sizes)){
power_estimates[i] <- power_analysis_function(sample_size = sample_size)
}
power_estimates
library(tidyverse)
surveys_subset <- read_csv("survey_subset.csv")
theme_set(theme_bw())
model <- lm(weight~hindfoot_length, data=surveys_subset)
summary(model) # assuming normality, homogeneity of variance
ggplot(surveys_subset, aes(x = hindfoot_length, y = weight)) +
geom_point(aes(color = as.factor(sex)), size = 2) +
stat_smooth(method = "lm", se = F, color = "gray") + labs(color = "sex")
### are the data normal?
ggplot(surveys_subset, aes(x = weight)) + geom_histogram() ## oh no!
ggplot(surveys_subset, aes(x = log(weight))) + geom_histogram() ## better!
model_logtrasnformed <- lm(log(weight)~hindfoot_length, data=surveys_subset)
summary(model_logtrasnformed)
new_hindfoot_length_obs <- data.frame(hindfoot_length = seq(0,100,0.1))
predicted_values <- predict.lm(object = model_logtrasnformed,
newdata = new_hindfoot_length_obs)
ggplot(cbind(logweight = predicted_values, new_hindfoot_length_obs),
aes(x = hindfoot_length, y = logweight)) + geom_line(size = 1, color = "gray") +
geom_point(data = surveys_subset, inherit.aes = F,  size = 2,
aes(x = hindfoot_length, y = log(weight), color = as.factor(sex))) +
labs(color = "sex", y = "log(weight)")
model <- lm(weight~as.factor(sex), data=surveys_subset)
summary(model)
model <- lm(weight~hindfoot_length+as.factor(sex), data=surveys_subset)
summary(model)
model <- lm(weight~hindfoot_length*as.factor(sex), data=surveys_subset)
summary(model)
model <- lm(weight~as.factor(sex), data=surveys_subset)
anova(model) # must wrap the anova() around a lm()/model
# use Anova() from car package with >1 predictor...gives Type III sum of squares
generate_data_directionalselection <- function(n = 100, values){
trait_data <- sort(sample(size = n, x = values, replace = T))
fitness_data <- 1 - dexp(trait_data, rate = 1) + rnorm(n, mean = 0, sd = 0.05)
return(
data.frame(
trait = trait_data, fitness = fitness_data/mean(fitness_data)
)
)
}
data <- generate_data_directionalselection(values = seq(0,3,0.01))
model1 <- lm(fitness~scale(trait), data)
# scale function transforms trait data so that mean=0, variance=1
summary(model1)
### fitness cut by ~50% per standard dev increase in trait value!
ggplot(data, aes(x = scale(trait), y = fitness)) +
geom_point(color = "gray") +
geom_smooth(method = "lm", formula = y ~ x, se = F) +
geom_smooth(method = "lm", formula = y ~ x + I(x^2), se = F,
color = "red") +
labs(x = "standardized trait value", y = "relative fitness")
model2 <- lm(fitness~scale(trait)+scale(trait^2), data)
summary(model2)
result_binary <- glm(as.factor(sex)~weight,
family=binomial,
data=surveys_subset)
summary(result_binary)
surveys_subset %>% filter(! is.na(sex)) %>%
mutate(ID = ifelse(sex == "M", 0, 1)) %>%
ggplot(aes(x = weight, y = ID)) + geom_point() +
geom_smooth(method = "glm",
method.args = list(family = "binomial"),
se = T
)
data_generator <- function(sample_size = 100){
age <- sample(size = 100, x = seq(0,100,0.1), replace = T)
linear_predictor <- 0.75*scale(age)
prob <- 1/(1+exp(-linear_predictor))
disease_status <- c()
for (i in 1:length(prob)){
disease_status[i] <- rbinom(n = 1, size = 1, prob = prob[i])
}
return(data.frame(age = age, disease_status = disease_status))
}
data <- data_generator()
data %>% pivot_longer(! age) %>%
ggplot(aes(x = age, y = value)) + geom_point() +
geom_smooth(method = "glm", method.args = list(family = "binomial")
) + labs(y = "disease status")
model <- glm(disease_status~scale(age), family = binomial, data = data)
summary(model)
power_analysis_function <- function(sample_size = 100){
sims <- 1000
pvalues <- c()
for (i in 1:sims){
data <- data_generator(sample_size)
model <- glm(disease_status~scale(age), family = binomial, data = data)
pvalues[i] <- summary(model)$coefficients[2,4]
}
power_estimate <- length(which(pvalues < 0.01))/length(pvalues)
return(power_estimate)
}
sample_sizes <- seq(0,500,20); power_estimates <- c()
for (i in 1:length(sample_sizes)){
power_estimates[i] <- power_analysis_function(sample_size = sample_size)
}
data_generator <- function(sample_size = 20){
age <- sample(size = 100, x = seq(0,100,0.1), replace = T)
linear_predictor <- 0.8*scale(age)
prob <- 1/(1+exp(-linear_predictor))
disease_status <- c()
for (i in 1:length(prob)){
disease_status[i] <- rbinom(n = 1, size = 1, prob = prob[i])
}
return(data.frame(age = age, disease_status = disease_status))
}
data <- data_generator()
data %>% pivot_longer(! age) %>%
ggplot(aes(x = age, y = value)) + geom_point() +
geom_smooth(method = "glm", method.args = list(family = "binomial")
) + labs(y = "disease status")
model <- glm(disease_status~scale(age), family = binomial, data = data)
data %>% pivot_longer(! age) %>%
ggplot(aes(x = age, y = value)) + geom_point() +
geom_smooth(method = "glm", method.args = list(family = "binomial")
) + labs(y = "disease status")
data_generator <- function(sample_size = 20){
age <- sample(size = sample_size, x = seq(0,100,0.1), replace = T)
linear_predictor <- 0.8*scale(age)
prob <- 1/(1+exp(-linear_predictor))
disease_status <- c()
for (i in 1:length(prob)){
disease_status[i] <- rbinom(n = 1, size = 1, prob = prob[i])
}
return(data.frame(age = age, disease_status = disease_status))
}
data <- data_generator()
data %>% pivot_longer(! age) %>%
ggplot(aes(x = age, y = value)) + geom_point() +
geom_smooth(method = "glm", method.args = list(family = "binomial")
) + labs(y = "disease status")
